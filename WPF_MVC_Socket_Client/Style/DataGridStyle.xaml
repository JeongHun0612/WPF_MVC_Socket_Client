<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModel="clr-namespace:WPF_MVC_Socket_Client.ViewModel">

    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="{StaticResource MainBackgroundBrush}"/>
    </Style>

    <!-- DataGridCellStyle -->
    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{StaticResource MainBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontFamily" Value="/Fonts/#Roboto Light"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource ListItemSelectedTrueBackgroudBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource ListItemSelectedFalseBackgroudBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ContentForegroundBrush}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!-- RXTXTagTextStyle -->
    <!--<Style x:Key="RXTXTagTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="5,0,5,0"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RXTXTag}" Value="[RX]">
                <Setter Property="Foreground" Value="{StaticResource ListItemRXTagForegroundBrush}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RXTXTag}" Value="[TX]">
                <Setter Property="Foreground" Value="{StaticResource ListItemTXTagForegroundBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>-->

    <!-- TimeTextStyle -->
    <!--<Style x:Key="TimeTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,0,5,0"/>
    </Style>-->

    <!-- ContentTextStyle -->
    <!--<Style x:Key="ContentTextStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static viewModel:MainWindowViewModel.ReceiveOptionViewModel}, Path=IsLineBreak}" Value="True">
                <Setter Property="TextWrapping" Value="Wrap"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Source={x:Static viewModel:MainWindowViewModel.ReceiveOptionViewModel}, Path=IsLineBreak}" Value="False">
                <Setter Property="TextWrapping" Value="NoWrap"/>
                --><!--<Setter Property="Width" Value="Auto"/>--><!--
            </DataTrigger>
        </Style.Triggers>
    </Style>-->

</ResourceDictionary>